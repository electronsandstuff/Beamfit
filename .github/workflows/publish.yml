name: Build and Upload Python Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"  # Build for Python 3.9, 3.10, 3.11, and 3.12
          CIBW_SKIP: "*-musllinux_* pp* *-win32 *-manylinux_i686"  # Skip musllinux, PyPy, 32-bit Windows, and 32-bit Linux
          CIBW_ARCHS_MACOS: "x86_64 arm64"  # Build for Intel and Apple Silicon on macOS
          CIBW_ARCHS_LINUX: "x86_64 aarch64"  # Build for x86_64 and ARM64 on Linux
          CIBW_ARCHS_WINDOWS: "AMD64"  # Build for 64-bit Windows
          CIBW_BEFORE_BUILD: "pip install numpy"  # Install numpy before building
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest {package}/tests"  # Run tests after building

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # Only upload to PyPI on release
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Prepare files for upload
        run: |
          mkdir -p dist_flat
          find dist -type f -name "*.whl" -o -name "*.tar.gz" | xargs -I {} cp {} dist_flat/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist_flat/
